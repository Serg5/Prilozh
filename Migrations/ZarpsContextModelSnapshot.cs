// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prj.Repositories;

namespace Prj.Migrations
{
    [DbContext(typeof(ZarpsContext))]
    partial class ZarpsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Prj.Entities.Act", b =>
                {
                    b.Property<long>("ActId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Actname")
                        .HasColumnType("TEXT");

                    b.HasKey("ActId");

                    b.ToTable("Act");

                    b.HasData(
                        new
                        {
                            ActId = 1L,
                            Actname = "\"Московское трехстороннее соглашение на 2002 год между Правительством Москвы, московскими объединениями профсоюзов и московскими объединениями промышленников и предпринимателей (работодателей)\" от 04.12.2001"
                        },
                        new
                        {
                            ActId = 2L,
                            Actname = "\"Московское трехстороннее соглашение на 2003 год между Правительством Москвы, московскими объединениями профсоюзов и московскими объединениями промышленников и предпринимателей (работодателей)\" от 15.12.2002"
                        });
                });

            modelBuilder.Entity("Prj.Entities.Date", b =>
                {
                    b.Property<long>("DateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.Property<int>("month")
                        .HasColumnType("INTEGER");

                    b.HasKey("DateId");

                    b.ToTable("Date");

                    b.HasData(
                        new
                        {
                            DateId = 1L,
                            Year = "2002",
                            month = 0
                        },
                        new
                        {
                            DateId = 2L,
                            Year = "2002",
                            month = 8
                        });
                });

            modelBuilder.Entity("Prj.Entities.MinZar", b =>
                {
                    b.Property<long>("MinZarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ActId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DateId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Zarplata")
                        .HasColumnType("INTEGER");

                    b.HasKey("MinZarId");

                    b.HasIndex("ActId");

                    b.HasIndex("DateId");

                    b.ToTable("Zarps");

                    b.HasData(
                        new
                        {
                            MinZarId = 1L,
                            ActId = 1L,
                            DateId = 1L,
                            Zarplata = 1100L
                        },
                        new
                        {
                            MinZarId = 2L,
                            ActId = 2L,
                            DateId = 2L,
                            Zarplata = 1270L
                        });
                });

            modelBuilder.Entity("Prj.Entities.MinZar", b =>
                {
                    b.HasOne("Prj.Entities.Act", "Act")
                        .WithMany()
                        .HasForeignKey("ActId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prj.Entities.Date", "Date")
                        .WithMany()
                        .HasForeignKey("DateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
